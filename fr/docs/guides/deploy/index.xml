<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OSRD – Déployer OSRD</title><link>https://osrd.fr/fr/docs/guides/deploy/</link><description>Recent content in Déployer OSRD on OSRD</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://osrd.fr/fr/docs/guides/deploy/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Docker Compose</title><link>https://osrd.fr/fr/docs/guides/deploy/docker-compose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://osrd.fr/fr/docs/guides/deploy/docker-compose/</guid><description>
&lt;p>Le projet OSRD inclut un fichier docker-compose.yml conçu pour faciliter le déploiement d&amp;rsquo;un environnement OSRD pleinement fonctionnel. Initialement destiné à des fins de développement, ce Docker Compose peut également être adapté pour des déploiements rapides sur un seul nœud.&lt;/p>
&lt;h2 id="prérequis">Prérequis&lt;/h2>
&lt;p>Avant de procéder au déploiement, assurez-vous que vous avez installé :&lt;/p>
&lt;ul>
&lt;li>Docker&lt;/li>
&lt;li>Docker Compose&lt;/li>
&lt;/ul>
&lt;h2 id="vue-densemble-de-la-configuration">Vue d&amp;rsquo;ensemble de la configuration&lt;/h2>
&lt;p>Le fichier &lt;code>docker-compose.yml&lt;/code> définit les services suivants :&lt;/p>
&lt;ol>
&lt;li>&lt;strong>PostgreSQL&lt;/strong> : Une base de données PostgreSQL avec l&amp;rsquo;extension PostGIS.&lt;/li>
&lt;li>&lt;strong>Redis&lt;/strong> : Un serveur Redis pour le cache.&lt;/li>
&lt;li>&lt;strong>Core&lt;/strong> : Le service central OSRD.&lt;/li>
&lt;li>&lt;strong>Front&lt;/strong> : Le service front-end pour OSRD.&lt;/li>
&lt;li>&lt;strong>Editoast&lt;/strong> : Un service OSRD responsable de diverses fonctions d&amp;rsquo;édition.&lt;/li>
&lt;li>&lt;strong>Gateway&lt;/strong> : Sert de passerelle pour les services OSRD.&lt;/li>
&lt;li>&lt;strong>Wait-Healthy&lt;/strong> : Un service utilitaire pour s&amp;rsquo;assurer que tous les services sont sains avant de procéder.&lt;/li>
&lt;/ol>
&lt;p>Chaque service est configuré avec des contrôles de santé, des montages de volumes et les variables d&amp;rsquo;environnement nécessaires.&lt;/p>
&lt;h2 id="étapes-du-déploiement">Étapes du déploiement&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Cloner le dépôt&lt;/strong> : Tout d&amp;rsquo;abord, clonez le dépôt OSRD sur votre machine locale.&lt;/li>
&lt;li>&lt;strong>Variables d&amp;rsquo;environnement&lt;/strong> (facultatif) : Définissez les variables d&amp;rsquo;environnement nécessaires si vous devez ajuster certaines configurations.&lt;/li>
&lt;li>&lt;strong>Construire et exécuter&lt;/strong> : Naviguez vers le répertoire contenant &lt;code>docker-compose.yml&lt;/code> et exécutez :&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker-compose up --build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cette commande construit les images et démarre les services définis dans le fichier Docker Compose.&lt;/p>
&lt;h2 id="accès-aux-services">Accès aux services&lt;/h2>
&lt;p>Bien que tous les services HTTP soient utilisés via la passerelle (&lt;code>http://localhost:4000&lt;/code>), vous pouvez accéder directement à chaque service en utilisant leurs ports exposés :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>PostgreSQL&lt;/strong> : Accessible sur &lt;code>localhost:5432&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Redis&lt;/strong> : Accessible sur &lt;code>localhost:6379&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Service Core&lt;/strong> : Accessible sur &lt;code>localhost:8080&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Front-End&lt;/strong> : Accessible sur &lt;code>localhost:3000&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Editoast&lt;/strong> : Accessible sur &lt;code>localhost:8090&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="notes-et-considérations">Notes et considérations&lt;/h2>
&lt;ul>
&lt;li>Cette configuration est conçue pour le développement et les déploiements rapides. Pour les environnements de production, des considérations supplémentaires en matière de sécurité, de scalabilité et de fiabilité doivent être abordées.&lt;/li>
&lt;li>Assurez-vous que le &lt;code>POSTGRES_PASSWORD&lt;/code> et d&amp;rsquo;autres identifiants sensibles sont gérés en toute sécurité, en particulier dans les déploiements de production.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Kubernetes avec Helm</title><link>https://osrd.fr/fr/docs/guides/deploy/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://osrd.fr/fr/docs/guides/deploy/kubernetes/</guid><description>
&lt;p>La Helm Chart du projet OSRD fournit une solution pour déployer les services OSRD dans un environnement Kubernetes de manière standardisée. Ce document décrit les options de configuration disponibles dans le Helm Chart.&lt;/p>
&lt;h2 id="prérequis">Prérequis&lt;/h2>
&lt;p>Avant de procéder au déploiement, assurez-vous que vous avez installé :&lt;/p>
&lt;ul>
&lt;li>Un cluster Kubernetes opérationnel&lt;/li>
&lt;li>Une base de données PostgreSQL avec PostGIS&lt;/li>
&lt;li>Un serveur Redis (utilisé pour le cache)&lt;/li>
&lt;/ul>
&lt;h2 id="le-serveur-de-tuiles">Le serveur de tuiles&lt;/h2>
&lt;p>Le serveur de tuiles est le composant responsable de la génération des tuiles cartographiques vectorielles. Il est recommandé de le séparer du Editoast standard lors de l&amp;rsquo;exécution d&amp;rsquo;une configuration de production, car Editoast ne peut pas être mis à l&amp;rsquo;échelle horizontalement (il est stateful).&lt;/p>
&lt;p>Vous pouvez visualiser le déploiement recommandé ici :&lt;/p>
&lt;pre class="mermaid">flowchart TD
gw[&amp;#34;gateway&amp;#34;]
front[&amp;#34;fichier statiques front-end&amp;#34;]
gw -- fichier local --&amp;gt; front
navigateur --&amp;gt; gw
gw -- HTTP --&amp;gt; editoast
gw -- HTTP --&amp;gt; tileserver-1
gw -- HTTP --&amp;gt; tileserver-2
gw -- HTTP --&amp;gt; tileserver-n...
editoast -- HTTP --&amp;gt; core&lt;/pre>
&lt;p>Le Helm Chart utilise le&lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/">HorizontalPodAutoscaler&lt;/a> de Kubernetes pour lancer autant de serveurs de tuiles que nécessaire en fonction de la charge de travail.&lt;/p>
&lt;h2 id="configuration-de-la-helm-chart-values">Configuration de la Helm Chart (values)&lt;/h2>
&lt;p>Le Helm Chart est configurable à travers les valeurs suivantes :&lt;/p>
&lt;h3 id="service-core">Service Core&lt;/h3>
&lt;ul>
&lt;li>&lt;code>core&lt;/code> : Configuration pour le service central OSRD.
&lt;ul>
&lt;li>&lt;code>internalUrl&lt;/code> : URL interne pour la communication entre services.&lt;/li>
&lt;li>&lt;code>image&lt;/code> : Image Docker à utiliser.&lt;/li>
&lt;li>&lt;code>pullPolicy&lt;/code> : Politique de récupération de l&amp;rsquo;image.&lt;/li>
&lt;li>&lt;code>replicaCount&lt;/code> : Nombre de réplicas.&lt;/li>
&lt;li>&lt;code>service&lt;/code> : Type de service et configuration des ports.&lt;/li>
&lt;li>&lt;code>resources&lt;/code>, &lt;code>env&lt;/code>, &lt;code>annotations&lt;/code>, &lt;code>labels&lt;/code>, &lt;code>nodeSelector&lt;/code>, &lt;code>tolerations&lt;/code>, &lt;code>affinity&lt;/code> : Diverses options de déploiement Kubernetes.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="service-editoast">Service Editoast&lt;/h3>
&lt;ul>
&lt;li>&lt;code>editoast&lt;/code> : Configuration pour le service Editoast.
&lt;ul>
&lt;li>Comprend des options similaires à &lt;code>core&lt;/code> pour le déploiement Kubernetes.&lt;/li>
&lt;li>&lt;code>init&lt;/code> : Configuration d&amp;rsquo;initialisation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="serveur-de-tuiles">Serveur de tuiles&lt;/h3>
&lt;ul>
&lt;li>&lt;code>tileServer&lt;/code> : Service Editoast spécialisé qui sert uniquement des tuiles cartographiques vectorielles.
&lt;ul>
&lt;li>&lt;code>enabled&lt;/code> : Définir sur &lt;code>true&lt;/code> pour activer la fonctionnalité de serveur de tuiles.&lt;/li>
&lt;li>&lt;code>image&lt;/code> : Image Docker à utiliser (généralement la même que Editoast).&lt;/li>
&lt;li>&lt;code>replicaCount&lt;/code> : Nombre de réplicas, permettant la mise à l&amp;rsquo;échelle horizontale.&lt;/li>
&lt;li>&lt;code>hpa&lt;/code> : Configuration de l&amp;rsquo;Horizontal Pod Autoscaler.&lt;/li>
&lt;li>Autres options standard de déploiement Kubernetes.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;ul>
&lt;li>&lt;code>gateway&lt;/code> : Configuration pour le gateway OSRD.
&lt;ul>
&lt;li>Comprend des options de service, d&amp;rsquo;ingress et d&amp;rsquo;autres options de déploiement Kubernetes.&lt;/li>
&lt;li>&lt;code>config&lt;/code> : Configurations spécifiques pour l&amp;rsquo;authentification et les proxys de confiance.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="déploiement">Déploiement&lt;/h2>
&lt;p>Le chart est disponible dans le dépôt OCI ghcr. Vous pouvez trouver 2 versions de la chart :&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/osrd-project/osrd-chart/pkgs/container/charts%2Fosrd">Charts stables&lt;/a> : &lt;code>oci://ghcr.io/osrd-project/charts/osrd&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/osrd-project/osrd-chart/pkgs/container/charts%2Fosrd-dev">Charts de développement&lt;/a> : &lt;code>oci://ghcr.io/osrd-project/charts/osrd-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Pour déployer les services OSRD en utilisant Helm :&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Configurer les valeurs&lt;/strong> : Ajustez les valeurs selon vos besoins de déploiement.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Installer le Chart&lt;/strong> : Utilisez la commande &lt;code>helm install&lt;/code> pour installer la chart dans votre cluster Kubernetes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>helm install osrd oci://ghcr.io/osrd-project/charts/osrd -f values.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item></channel></rss>