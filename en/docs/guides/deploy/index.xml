<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OSRD â€“ Deploy OSRD</title><link>https://osrd.fr/en/docs/guides/deploy/</link><description>Recent content in Deploy OSRD on OSRD</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://osrd.fr/en/docs/guides/deploy/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Docker Compose</title><link>https://osrd.fr/en/docs/guides/deploy/docker-compose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://osrd.fr/en/docs/guides/deploy/docker-compose/</guid><description>
&lt;p>The OSRD project includes a &lt;code>docker-compose.yml&lt;/code> file designed to facilitate the deployment of a fully functional OSRD environment.
Only intended for development purposes, this Docker Compose configuration could be adapted for quick, single-node deployments.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Disclaimer&lt;/h4>
This setup is designed for development only.
For example no authentication is supported and the front-end is served in development mode (rebuilt on the fly).
If you mean to deploy a production ready version of OSRD, please follow the &lt;a href="../kubernetes/">Kubernetes-based deployment&lt;/a>
&lt;/div>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Before proceeding with the deployment, ensure that you have the following installed:&lt;/p>
&lt;ul>
&lt;li>Docker&lt;/li>
&lt;li>Docker Compose&lt;/li>
&lt;/ul>
&lt;h2 id="configuration-overview">Configuration Overview&lt;/h2>
&lt;p>The &lt;code>docker-compose.yml&lt;/code> file defines the following services:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>PostgreSQL&lt;/strong>: A PostgreSQL database with PostGIS extension.&lt;/li>
&lt;li>&lt;strong>Redis&lt;/strong>: A Redis server for caching.&lt;/li>
&lt;li>&lt;strong>Core&lt;/strong>: The core OSRD service.&lt;/li>
&lt;li>&lt;strong>Front&lt;/strong>: The front-end service for OSRD.&lt;/li>
&lt;li>&lt;strong>Editoast&lt;/strong>: A OSRD service responsible for various editorial functions.&lt;/li>
&lt;li>&lt;strong>Gateway&lt;/strong>: Serves as the gateway for the OSRD services.&lt;/li>
&lt;li>&lt;strong>Wait-Healthy&lt;/strong>: A utility service to ensure all services are healthy before proceeding.&lt;/li>
&lt;/ol>
&lt;p>Each service is configured with health checks, volume mounts and necessary environment variables.&lt;/p>
&lt;h2 id="deployment-steps">Deployment Steps&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Clone the Repository&lt;/strong>: First, clone the OSRD repository to your local machine.&lt;/li>
&lt;li>&lt;strong>Configuration&lt;/strong>: The default configuration requires setting an environment variable for the Editoast service: &lt;code>ROOT_URL&lt;/code>.
It should be set to the URL pointing to the Editoast service through the gateway. For example, &amp;ldquo;&lt;a href="http://your-domain.com/api%22">http://your-domain.com/api&amp;quot;&lt;/a>.&lt;br>
You can also adjust other environment variables if needed.&lt;/li>
&lt;li>&lt;strong>Build and Run&lt;/strong>: Navigate to the directory containing &lt;code>docker-compose.yml&lt;/code> and run:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker-compose up --build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command builds the images and starts the services defined in the Docker Compose file.&lt;/p>
&lt;h2 id="accessing-services">Accessing Services&lt;/h2>
&lt;p>While all HTTP service are used through the gateway (&lt;code>http://localhost:4000&lt;/code>), you can access directly each service using their exposed ports:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>PostgreSQL&lt;/strong>: Accessible on &lt;code>localhost:5432&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Redis&lt;/strong>: Accessible on &lt;code>localhost:6379&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Core Service&lt;/strong>: Accessible on &lt;code>localhost:8080&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Front-End&lt;/strong>: Accessible on &lt;code>localhost:3000&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Editoast&lt;/strong>: Accessible on &lt;code>localhost:8090&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="notes-and-considerations">Notes and Considerations&lt;/h2>
&lt;ul>
&lt;li>This setup is designed for development and quick deployments. For production environments, additional considerations for security, scalability and reliability should be addressed.&lt;/li>
&lt;li>Ensure that the &lt;code>POSTGRES_PASSWORD&lt;/code> and other sensitive credentials are securely managed, especially in production deployments.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Kubernetes with Helm</title><link>https://osrd.fr/en/docs/guides/deploy/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://osrd.fr/en/docs/guides/deploy/kubernetes/</guid><description>
&lt;p>The OSRD project&amp;rsquo;s Helm Chart provides a flexible and efficient way to deploy OSRD services in a Kubernetes environment. This document outlines the configuration options available in the Helm Chart, focusing on each service component.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Before proceeding with the deployment, ensure that you have the following installed:&lt;/p>
&lt;ul>
&lt;li>A Kubernetes cluster up and running&lt;/li>
&lt;li>A PostgreSQL database with PostGIS&lt;/li>
&lt;li>A Redis server (used for caching)&lt;/li>
&lt;/ul>
&lt;h2 id="the-tileserver">The tileserver&lt;/h2>
&lt;p>Tileserver is the component responsible for generating vector map tiles. It is recommended to separate it from standard Editoast while running a production setup since Editoast cannot be scaled horizontally (it is stateful).&lt;/p>
&lt;p>You can visualize the recommended deployment here:&lt;/p>
&lt;pre class="mermaid">flowchart TD
gw[&amp;#34;gateway&amp;#34;]
front[&amp;#34;front-end static files&amp;#34;]
gw -- local file --&amp;gt; front
browser --&amp;gt; gw
gw -- HTTP --&amp;gt; editoast
gw -- HTTP --&amp;gt; tileserver-1
gw -- HTTP --&amp;gt; tileserver-2
gw -- HTTP --&amp;gt; tileserver-n...
editoast -- HTTP --&amp;gt; core&lt;/pre>
&lt;p>The Helm chart leverages Kubernete&amp;rsquo;s &lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/">HorizontalPodAutoscaler&lt;/a> in order to spawn as much tileserver as required for the current workload.&lt;/p>
&lt;h2 id="chart-values-overview">Chart Values Overview&lt;/h2>
&lt;p>The Helm Chart is configurable through the following values:&lt;/p>
&lt;h3 id="core-service">Core Service&lt;/h3>
&lt;ul>
&lt;li>&lt;code>core&lt;/code>: Configuration for the core OSRD service.
&lt;ul>
&lt;li>&lt;code>internalUrl&lt;/code>: Internal URL for service communication.&lt;/li>
&lt;li>&lt;code>image&lt;/code>: Docker image to use.&lt;/li>
&lt;li>&lt;code>pullPolicy&lt;/code>: Image pull policy.&lt;/li>
&lt;li>&lt;code>replicaCount&lt;/code>: Number of replicas.&lt;/li>
&lt;li>&lt;code>service&lt;/code>: Service type and port configuration.&lt;/li>
&lt;li>&lt;code>resources&lt;/code>, &lt;code>env&lt;/code>, &lt;code>annotations&lt;/code>, &lt;code>labels&lt;/code>, &lt;code>nodeSelector&lt;/code>, &lt;code>tolerations&lt;/code>, &lt;code>affinity&lt;/code>: Various Kubernetes deployment options.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="editoast-service">Editoast Service&lt;/h3>
&lt;ul>
&lt;li>&lt;code>editoast&lt;/code>: Configuration for the Editoast service.
&lt;ul>
&lt;li>Includes similar options as &lt;code>core&lt;/code> for Kubernetes deployment.&lt;/li>
&lt;li>&lt;code>init&lt;/code>: Initialization configuration.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="tile-server">Tile Server&lt;/h3>
&lt;ul>
&lt;li>&lt;code>tileServer&lt;/code>: Specialized Editoast service that serves only vector map tiles.
&lt;ul>
&lt;li>&lt;code>enabled&lt;/code>: Set to &lt;code>true&lt;/code> to enable tile server functionality.&lt;/li>
&lt;li>&lt;code>image&lt;/code>: Docker image to use (typically the same as Editoast).&lt;/li>
&lt;li>&lt;code>replicaCount&lt;/code>: Number of replicas, allowing for horizontal scaling.&lt;/li>
&lt;li>&lt;code>hpa&lt;/code>: Horizontal Pod Autoscaler configuration.&lt;/li>
&lt;li>Other standard Kubernetes deployment options.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;ul>
&lt;li>&lt;code>gateway&lt;/code>: Configuration for the OSRD gateway.
&lt;ul>
&lt;li>Includes service, ingress, and other Kubernetes deployment options.&lt;/li>
&lt;li>&lt;code>config&lt;/code>: Specific configurations for authentication and trusted proxies.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="deployment">Deployment&lt;/h2>
&lt;p>The chart is available at ghcr OCI repository. You can find 2 Helm charts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/osrd-project/osrd-chart/pkgs/container/charts%2Fosrd">Stable charts&lt;/a>: &lt;code>oci://ghcr.io/osrd-project/charts/osrd&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/osrd-project/osrd-chart/pkgs/container/charts%2Fosrd-dev">Dev charts&lt;/a>: &lt;code>oci://ghcr.io/osrd-project/charts/osrd-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>To deploy the OSRD services using this Helm Chart:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Configure Values&lt;/strong>: Adjust the values in the Helm Chart to suit your deployment needs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Install Chart&lt;/strong>: Use Helm to install the chart into your Kubernetes cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>helm install osrd oci://ghcr.io/osrd-project/charts/osrd -f values.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item></channel></rss>